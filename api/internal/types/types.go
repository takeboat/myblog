// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0

package types

type Archive struct {
	Year  int           `json:"year"`
	Month int           `json:"month"`
	Posts []PostArchive `json:"posts"`
}

type ArchiveReq struct {
	Page     int `json:"page"`
	PageSize int `json:"page_size"`
}

type ArchiveResp struct {
	BaseResp
	Data  []Archive `json:"data"`
	Total int64     `json:"total"`
	Page  int       `json:"page"`
}

type BaseResp struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

type Category struct {
	Id        int64  `json:"id"`
	Name      string `json:"name"`
	CreatedAt string `json:"created_at"`
}

type CategoryListResp struct {
	BaseResp
	List []Category `json:"list"`
}

type CreateCategoryReq struct {
	Name string `json:"name"`
}

type CreatePostReq struct {
	Title      string  `json:"title"`
	Content    string  `json:"content"`
	CategoryId *int64  `json:"category_id,omitempty"`
	TagIds     []int64 `json:"tag_ids,omitempty"`
}

type CreateTagReq struct {
	Name string `json:"name"`
}

type DataResp struct {
	Code    int         `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data"`
}

type IdReq struct {
	Id int64 `path:"id"`
}

type LoginReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type LoginResp struct {
	BaseResp
	AccessToken string `json:"access_token"`
	ExpiresIn   int64  `json:"expires_in"`
}

type Post struct {
	Id         int64  `json:"id"`
	Title      string `json:"title"`
	Content    string `json:"content"`
	UserId     int64  `json:"user_id"`
	CategoryId *int64 `json:"category_id,omitempty"`
	Status     int    `json:"status"`
	ViewCount  int    `json:"view_count"`
	Tags       []Tag  `json:"tags,omitempty"`
	CreatedAt  string `json:"created_at"`
	UpdatedAt  string `json:"updated_at"`
}

type PostArchive struct {
	Id        int64  `json:"id"`
	Title     string `json:"title"`
	CreatedAt string `json:"created_at"`
}

type PostListReq struct {
	Page       int    `json:"page"`
	PageSize   int    `json:"page_size"`
	CategoryId *int64 `json:"category_id,omitempty"`
}

type PostListResp struct {
	BaseResp
	List  []Post `json:"list"`
	Total int64  `json:"total"`
}

type RegisterReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Nickname string `json:"nickname"`
	Email    string `json:"email"`
}

type Tag struct {
	Id        int64  `json:"id"`
	Name      string `json:"name"`
	CreatedAt string `json:"created_at"`
}

type TagListResp struct {
	BaseResp
	List []Tag `json:"list"`
}

type UpdatePostReq struct {
	Id         int64   `path:"id"`
	Title      string  `json:"title"`
	Content    string  `json:"content"`
	CategoryId *int64  `json:"category_id,omitempty"`
	TagIds     []int64 `json:"tag_ids,omitempty"`
}

type UserInfoReq struct {
	Username string `json:"username"`
}

type UserInfoResp struct {
	Id        int64  `json:"id"`
	Username  string `json:"username"`
	Nickname  string `json:"nickname"`
	Email     string `json:"email"`
	Avatar    string `json:"avatar"`
	CreatedAt string `json:"created_at"`
}
